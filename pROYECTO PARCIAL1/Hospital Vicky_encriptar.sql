CREATE DATABASE HOSPITAL_MEDICAMENTO
USE HOSPITAL_MEDICAMENTO

CREATE TABLE DELMUN(
ID_DELMUN VARCHAR(7),
NOM_DELMUN VARCHAR(50) NOT NULL,
CONSTRAINT PK_IDM PRIMARY KEY (ID_DELMUN),
CHECK (ID_DELMUN LIKE 'DM-[0-9][0-9][0-9][A-Z]'))

CREATE TABLE PROVEEDOR(
CODIGO_PROV VARCHAR(6),
NOM_PROV VARCHAR(60) NOT NULL,
CONSTRAINT PK_CPR PRIMARY KEY (CODIGO_PROV),
CHECK (CODIGO_PROV LIKE 'PR-[A-Z][0-9][0-9]'))

CREATE TABLE DIAGNOSTICO(
ID_DIAG VARCHAR(6),
TIPO_DIAG VARCHAR(80) NOT NULL,
CONSTRAINT PK_IDI PRIMARY KEY (ID_DIAG),
CHECK (ID_DIAG LIKE 'DI-[A-Z][0-9][0-9]'))

CREATE TABLE COMPUESTOQUIMICO(
ID_COMP VARCHAR(7),
NOM_COMP VARCHAR(60) NOT NULL,
CONSTRAINT PK_ICO PRIMARY KEY (ID_COMP),
CHECK (ID_COMP LIKE 'CQ-[A-Z][0-9][0-9][0-9]'))

CREATE TABLE UBICACIONFARMACO(
ID_UBICACION VARCHAR(7),
NOM_UBICACIONE VARCHAR(60) NOT NULL,
CONSTRAINT PK_IUB PRIMARY KEY (ID_UBICACION),
CHECK (ID_UBICACION LIKE 'UF-[A-Z][0-9][0-9][0-9]'))

CREATE TABLE SERVICIO(
ID_SERVICIO VARCHAR(6),
NOM_SERVICIO VARCHAR(40) NOT NULL,
CONSTRAINT PK_ISE PRIMARY KEY (ID_SERVICIO),
CHECK (ID_SERVICIO LIKE'SE-[A-Z][0-9][0-9]'))

CREATE TABLE COLONIA(
ID_COLONIA VARCHAR(7),
NOM_COLONIA VARCHAR(60) NOT NULL,
CONSTRAINT PK_ICOl PRIMARY KEY (ID_COLONIA),
CHECK (ID_COLONIA LIKE 'CO-[0-9][0-9][0-9][A-Z]'))

CREATE TABLE CALLE(
ID_CALLE VARCHAR(7),
NOM_CALLE VARCHAR(60) NOT NULL,
CONSTRAINT PK_ICAl PRIMARY KEY (ID_CALLE),
CHECK (ID_CALLE LIKE 'CA-[0-9][0-9][0-9][A-Z]'))

CREATE TABLE FACULTATIVO(
NUM_COLEGIADO BIGINT,
NOM_FAC VARCHAR(20) NOT NULL,
APP_FAC VARCHAR(25) NOT NULL,
APM_FAC VARCHAR(25) NOT NULL,
ID_COLONIA2 VARCHAR(7),
ID_CALLE2 VARCHAR(7),
CP_FAC INT NOT NULL,
TEL_FAC BIGINT NOT NULL,
ID_DELMUN2 VARCHAR(7),
ID_SERVICIO2 VARCHAR(6),
CONSTRAINT PK_NC PRIMARY KEY (NUM_COLEGIADO),
CONSTRAINT FK_ICO2 FOREIGN KEY (ID_COLONIA2) REFERENCES COLONIA (ID_COLONIA) ON DELETE SET NULL,
CONSTRAINT FK_ICA2 FOREIGN KEY (ID_CALLE2) REFERENCES CALLE (ID_CALLE) ON DELETE SET NULL,
CONSTRAINT FK_IDM2 FOREIGN KEY (ID_DELMUN2) REFERENCES DELMUN (ID_DELMUN) ON DELETE SET NULL,
CONSTRAINT FK_ISE2 FOREIGN KEY (ID_SERVICIO2) REFERENCES SERVICIO (ID_SERVICIO) ON DELETE SET NULL,
CHECK (NUM_COLEGIADO > 0),
CHECK (CP_FAC > 999 and CP_FAC < 100000),
CHECK (TEL_FAC > 9999999 and TEL_FAC < 10000000000))

CREATE TABLE FARMACO(
NUM_REGISTRO BIGINT,
NOM_COMERCIAL VARCHAR(100) NOT NULL,
NOM_CLINICO VARCHAR(100) NOT NULL,
PRECIO_UNI FLOAT NOT NULL,
CODIGO_PROV1 VARCHAR(6),
ID_UBICACION1 VARCHAR(7),
CONSTRAINT PK_NR PRIMARY KEY (NUM_REGISTRO),
CONSTRAINT FK_CP1 FOREIGN KEY (CODIGO_PROV1) REFERENCES PROVEEDOR (CODIGO_PROV) ON DELETE SET NULL,
CONSTRAINT FK_IUB1 FOREIGN KEY (ID_UBICACION1) REFERENCES UBICACIONFARMACO (ID_UBICACION) ON DELETE SET NULL,
CHECK (NUM_REGISTRO > 0),
CHECK (PRECIO_UNI >0))

CREATE TABLE PACIENTE(
NUM_HISTORIAL BIGINT IDENTITY,
NOM_PA VARCHAR(20) NOT NULL,
APP_PA VARCHAR(25) NOT NULL,
APM_PA VARCHAR (25) NOT NULL,
NUM_SEGURIDAD BIGINT NOT NULL,
ID_COLONIA1 VARCHAR(7),
ID_CALLE1 VARCHAR(7),
CP_PA INT NOT NULL,
TEL_PA BIGINT NOT NULL,
FECHA_NAPAC DATETIME NOT NULL,
ID_DELMUN1 VARCHAR(7),
CONSTRAINT PK_NH PRIMARY KEY (NUM_HISTORIAL),
CONSTRAINT FK_ICO1 FOREIGN KEY (ID_COLONIA1) REFERENCES COLONIA (ID_COLONIA) ON DELETE SET NULL,
CONSTRAINT FK_ICA1 FOREIGN KEY (ID_CALLE1) REFERENCES CALLE (ID_CALLE) ON DELETE SET NULL,
CONSTRAINT FK_IDM1 FOREIGN KEY (ID_DELMUN1) REFERENCES DELMUN (ID_DELMUN) ON DELETE SET NULL,
CHECK (NUM_HISTORIAL > 0),
CHECK (NUM_SEGURIDAD > 0),
CHECK (TEL_PA > 9999999 AND TEL_PA < 100000000),
CHECK (FECHA_NAPAC < GETDATE()))

CREATE TABLE FARMACO_SERVICIO(
ID_SERVICIO2 VARCHAR(6),
NUM_REGISTRO3 BIGINT,
DOSIS_S FLOAT NOT NULL,
PRECIO_DOSIS_S FLOAT,
CONSTRAINT FK_ISER2 FOREIGN KEY (ID_SERVICIO2) REFERENCES SERVICIO (ID_SERVICIO) ON DELETE CASCADE,
CONSTRAINT FK_NR3 FOREIGN KEY (NUM_REGISTRO3) REFERENCES FARMACO (NUM_REGISTRO) ON DELETE CASCADE,
CHECK (DOSIS_S > 0),
CHECK (PRECIO_DOSIS_S > 0))

CREATE TABLE FARMACO_COMPUESTO(
ID_COMP1 VARCHAR(7),
NUM_REGISTRO1 BIGINT,
CONSTRAINT FK_ICOm1 FOREIGN KEY (ID_COMP1) REFERENCES COMPUESTOQUIMICO (ID_COMP) ON DELETE CASCADE,
CONSTRAINT FK_NR1 FOREIGN KEY (NUM_REGISTRO1) REFERENCES FARMACO (NUM_REGISTRO) ON DELETE CASCADE)

CREATE TABLE INGRESO_PACIENTE(
NUM_COLEGIADO1 BIGINT,
NUM_HISTORIAL1 BIGINT,
ID_SERVICIO1 VARCHAR(6),
ID_DIAG1 VARCHAR(6),
NUM_REGISTRO2 BIGINT,
NUM_SECU INT IDENTITY,
FECHA_IN DATE NOT NULL,
FECHA_OUT DATE,
HORA_VIS TIME NOT NULL,
INFORME VARCHAR(200) NOT NULL,
DOSIS FLOAT NOT NULL,
PRECIO_DOSIS FLOAT,
CONSTRAINT FK_NCO1 FOREIGN KEY (NUM_COLEGIADO1) REFERENCES FACULTATIVO (NUM_COLEGIADO)ON DELETE SET NULL,
CONSTRAINT FK_NH1 FOREIGN KEY (NUM_HISTORIAL1) REFERENCES PACIENTE (NUM_HISTORIAL)ON DELETE CASCADE,
CONSTRAINT FK_ISE1 FOREIGN KEY (ID_SERVICIO1) REFERENCES SERVICIO (ID_SERVICIO)ON DELETE CASCADE,
CONSTRAINT FK_ID1 FOREIGN KEY (ID_DIAG1) REFERENCES DIAGNOSTICO (ID_DIAG)ON DELETE SET NULL,
CONSTRAINT FK_NR2 FOREIGN KEY (NUM_REGISTRO2) REFERENCES FARMACO (NUM_REGISTRO)ON DELETE SET NULL,
CHECK (NUM_SECU > 0),
CHECK (FECHA_IN = convert(Varchar(10),getdate(),103)),
CHECK (FECHA_OUT >= convert(Varchar(10),getdate(),103)),
CHECK (DOSIS > 0),
CHECK (PRECIO_DOSIS > 0))

--PROCEDIMIENTOS ALMACENADOS

CREATE PROCEDURE IN_DELMUN(
@NOM VARCHAR(50)
)
AS
 BEGIN
  INSERT INTO DELMUN VALUES ('DM-111A',@NOM)
 END
 
EXECUTE IN_DELMUN 'VENUSTIANO CARRANZA'
EXECUTE IN_DELMUN 'BENITO JUAREZ'

SELECT * FROM DELMUN

CREATE PROCEDURE IN_PROVEEDOR(
@NOM VARCHAR(50)
)
AS
 BEGIN
  INSERT INTO PROVEEDOR VALUES ('PR-P03',@NOM)
 END
 
EXECUTE IN_PROVEEDOR 'Proveedor 3'
EXECUTE IN_PROVEEDOR 'Proveedor Juan'

SELECT * FROM PROVEEDOR

CREATE PROCEDURE IN_DIAGNOSTICO(
@NOM VARCHAR(50)
)
AS
 BEGIN
  INSERT INTO DIAGNOSTICO VALUES ('DI-A03',@NOM)
 END
 
EXECUTE IN_DIAGNOSTICO 'Dolor de huesos'
EXECUTE IN_DIAGNOSTICO 'Dolor de espalda'

CREATE PROCEDURE IN_COMPUESTOQUIMICO(
@NOM VARCHAR(50)
)
AS
 BEGIN
  INSERT INTO COMPUESTOQUIMICO VALUES ('CQ-A003',@NOM)
 END
 
EXECUTE IN_COMPUESTOQUIMICO 'Compuesto quimico 3'
EXECUTE IN_COMPUESTOQUIMICO 'Ácido salicilico'
EXECUTE IN_COMPUESTOQUIMICO 'Paracetamol'


CREATE PROCEDURE IN_UBICACIONFARMACO(
@NOM VARCHAR(50)
)
AS
 BEGIN
  INSERT INTO UBICACIONFARMACO VALUES ('UF-A003',@NOM)
 END
]
 select * from ubicacionfarmaco
EXECUTE IN_UBICACIONFARMACO 'ubicacion 3'
EXECUTE IN_UBICACIONFARMACO 'stand 2'


CREATE PROCEDURE IN_SERVICIO(		
@NOM VARCHAR(50)
)
AS
 BEGIN
  INSERT INTO SERVICIO VALUES ('SE-A03',@NOM)
 END
 
EXECUTE IN_SERVICIO 'Servicio 3'
EXECUTE IN_SERVICIO 'Odontología'

CREATE PROCEDURE IN_COLONIA(
@NOM VARCHAR(50)
)
AS
 BEGIN
  INSERT INTO COLONIA VALUES ('CO-003A',@NOM)
 END
 
EXECUTE IN_COLONIA 'Colonia 3'
EXECUTE IN_COLONIA 'Reforma Iztaccihuatl'
CREATE PROCEDURE IN_CALLE(
@NOM VARCHAR(50)
)
AS
 BEGIN
  INSERT INTO CALLE VALUES ('Ca-003A',@NOM)
 END

EXECUTE IN_CALLE 'Calle 3'
EXECUTE IN_CALLE 'Playa azul'


CREATE PROCEDURE IN_FACULTATIVO(
@ID BIGINT,
@NOM VARCHAR(20),
@APP VARCHAR(25),
@APM VARCHAR(25),
@ID_CO VARCHAR(7),
@ID_CA VARCHAR(7),
@CP INT,
@TEL BIGINT,
@ID_DM VARCHAR(7),
@ID_SE VARCHAR(6)
)

AS
 BEGIN
  INSERT INTO FACULTATIVO VALUES (@ID,@NOM,@APP,@APM,@ID_CO,@ID_CA,@CP,@TEL,@ID_DM,@ID_SE)
 END
 
EXECUTE IN_FACULTATIVO 55669935,'Facultativo 3','Apellido 1','Apellido 2','CO-951C','CA-751C',75963,55774411,'DM-165V','SE-S15'
EXECUTE IN_FACULTATIVO 55669966,'Sergio','Lopez','Rosa','CO-951C','CA-751C',75963,55774411,'DM-165V','SE-S15'

CREATE PROCEDURE IN_FARMACO(
@NUM_RE BIGINT,
@NOM_COM VARCHAR(100),
@NOM_CLI VARCHAR(100),
@PRE_UN FLOAT,
@COD_PR VARCHAR(6),
@ID_UB VARCHAR(7)
)
AS
 BEGIN
  INSERT INTO FARMACO VALUES (@NUM_RE,@NOM_COM,@NOM_CLI,@PRE_UN,@COD_PR,@ID_UB)
 END

EXECUTE IN_FARMACO 775535,'Nombre comercial','Nombre clinico',88,'PR-P15','UF-U151'
EXECUTE IN_FARMACO 885535,'Bio electro','Electra',88,'PR-P15','UF-U151'

CREATE PROCEDURE IN_PACIENTE(
@NOM VARCHAR(20),
@APP VARCHAR(25),
@APM VARCHAR (25),
@NUM_SE BIGINT,
@ID_CO VARCHAR(7),
@ID_CA VARCHAR(7),
@CP INT,
@TEL BIGINT,
@FE_NA DATETIME,
@ID_DM VARCHAR(7)
)
AS
 BEGIN
 SET DATEFORMAT DMY
  INSERT INTO PACIENTE VALUES (@NOM,@APP,@APM,@NUM_SE,@ID_CO,@ID_CA,@CP,@TEL,@FE_NA,@ID_DM)
 END
 set dateformat dmy
EXECUTE IN_PACIENTE 'Paciente 3','Apellido 1','Apellido 2',33441122,'CO-951C','CA-751C',75636,55886633,'24-11-1991','DM-165V'
EXECUTE IN_PACIENTE 'Ana','Viniegra','Guerrero',33441122,'CO-951C','CA-751C',75636,55886633,'24-11-1991','DM-165V'
SELECT * FROM PACIENTE

CREATE PROCEDURE IN_FARMACO_SERVICIO(
@ID_SE VARCHAR(6),
@NUM_REG BIGINT,
@DOS_S FLOAT
)
AS
 BEGIN
  DECLARE @PRE FLOAT
  INSERT INTO FARMACO_SERVICIO VALUES (@ID_SE,@NUM_REG,@DOS_S,NULL)
  SELECT @PRE=FARMACO.PRECIO_UNI FROM FARMACO INNER JOIN FARMACO_SERVICIO ON FARMACO_SERVICIO.NUM_REGISTRO3=FARMACO.NUM_REGISTRO WHERE FARMACO.NUM_REGISTRO=@NUM_REG
  UPDATE FARMACO_SERVICIO SET PRECIO_DOSIS_S=@PRE*@DOS_S FROM FARMACO_SERVICIO WHERE FARMACO_SERVICIO.ID_SERVICIO2=@ID_SE AND FARMACO_SERVICIO.NUM_REGISTRO3=@NUM_REG
 END
 select * from farmaco
EXECUTE IN_FARMACO_SERVICIO 'SE-S15',775535,50
EXECUTE IN_FARMACO_SERVICIO 'SE-O16',885535,10
SELECT * FROM FARMACO_SERVICIO

CREATE PROCEDURE IN_FARMACO_COMPUESTO(
@ID_COM VARCHAR(7),
@NUM_REG BIGINT
)
AS
 BEGIN
  INSERT INTO FARMACO_COMPUESTO VALUES (@ID_COM,@NUM_REG)
 END
 
EXECUTE IN_FARMACO_COMPUESTO 'CQ-C151',775535

CREATE PROCEDURE IN_INGRESO_PACIENTE(
@NUM_COL BIGINT,
@NUM_HIS BIGINT,
@ID_SER VARCHAR(6),
@ID_DIA VARCHAR(6),
@NUM_REG BIGINT,--BUSQUEDA
@FE_IN DATE,
@FE_OUT DATE,
@HORA_VIS TIME,
@INFORME VARCHAR(200),
@DOS FLOAT)
AS
 BEGIN
 SET DATEFORMAT DMY
  INSERT INTO INGRESO_PACIENTE VALUES (@NUM_COL,@NUM_HIS,@ID_SER,@ID_DIA,@NUM_REG,@FE_IN,@FE_OUT,@HORA_VIS,@INFORME,@DOS,NULL)
  DECLARE @PRE FLOAT
  SELECT @PRE=FARMACO.PRECIO_UNI FROM FARMACO INNER JOIN INGRESO_PACIENTE ON INGRESO_PACIENTE.NUM_REGISTRO2=FARMACO.NUM_REGISTRO WHERE FARMACO.NUM_REGISTRO=@NUM_REG
  UPDATE INGRESO_PACIENTE SET PRECIO_DOSIS=@PRE*@DOS WHERE NUM_HISTORIAL1=@NUM_HIS AND FECHA_IN=@FE_IN AND HORA_VIS=@HORA_VIS
 END
 SELECT * FROM FACULTATIVO
 SELECT * FROM PACIENTE
 SELECT * FROM SERVICIO
 SELECT * FROM DIAGNOSTICO
 SELECT * FROM FARMACO
 select * from ingreso_paciente
SET DATEFORMAT DMY
EXEC IN_INGRESO_PACIENTE 55669935,1,'SE-S15','DI-D18',775535,'17-04-2015','18-04-2015','11:00','ENFERMO',1
EXEC IN_INGRESO_PACIENTE 55669966,4,'SE-O16','DI-D16',775535,'17-04-2015','18-04-2015','11:00','ENFERMO',1

--DISPARADORES DE ID

--DELMUN
CREATE TRIGGER TRI_DELMUN
ON DELMUN
FOR INSERT
AS
BEGIN
	DECLARE @ID VARCHAR(7)
	DECLARE @NOM VARCHAR(50)
	SELECT  @NOM = I.NOM_DELMUN, @ID=I.ID_DELMUN FROM INSERTED I
	IF EXISTS(SELECT * FROM DELMUN WHERE @ID<>DELMUN.ID_DELMUN AND @NOM=DELMUN.NOM_DELMUN)
	BEGIN
		PRINT'YA EXISTE EL REGISTRO'
		ROLLBACK TRANSACTION
	END
	ELSE BEGIN
	UPDATE DELMUN
	SET ID_DELMUN=UPPER(CHAR(68)+CHAR(77)+CHAR(45)+LEFT(LEN(NOM_DELMUN),1)+LEFT(ASCII(UPPER(REVERSE(NOM_DELMUN))),2)+LEFT(NOM_DELMUN,1)), NOM_DELMUN=UPPER(NOM_DELMUN)
	WHERE NOM_DELMUN=@NOM
	END
END

--PRUEBA
INSERT INTO DELMUN VALUES ('DM-111A','IztapaL')
SELECT * FROM DELMUN

--PROVEEDOR
CREATE TRIGGER TRI_PROVEEDOR
ON PROVEEDOR
FOR INSERT
AS
BEGIN
	DECLARE @ID VARCHAR(6)
	DECLARE @NOM VARCHAR(60)
	SELECT  @NOM = I.NOM_PROV, @ID=I.CODIGO_PROV FROM INSERTED I
	IF EXISTS(SELECT * FROM PROVEEDOR WHERE @ID<>PROVEEDOR.CODIGO_PROV AND @NOM=PROVEEDOR.NOM_PROV)
	BEGIN
		PRINT'YA EXISTE EL REGISTRO'
		ROLLBACK TRANSACTION
	END
	ELSE BEGIN
	UPDATE PROVEEDOR
	SET CODIGO_PROV=UPPER(CHAR(80)+CHAR(82)+CHAR(45)+LEFT(NOM_PROV,1)+LEFT(LEN(NOM_PROV),1)+LEFT(ASCII(UPPER(REVERSE(NOM_PROV))),1)), NOM_PROV=UPPER(NOM_PROV)
	WHERE NOM_PROV=@NOM
	END
END
--PRUEBA
INSERT INTO PROVEEDOR VALUES ('PR-A11','JENNERI')
SELECT * FROM PROVEEDOR

--DIAGNOSTICO
CREATE TRIGGER TRI_DIAGNOSTICO
ON DIAGNOSTICO
FOR INSERT
AS
BEGIN
	DECLARE @ID VARCHAR(6)
	DECLARE @NOM VARCHAR(80)
	SELECT  @NOM = I.TIPO_DIAG, @ID=I.ID_DIAG FROM INSERTED I
	IF EXISTS(SELECT * FROM DIAGNOSTICO WHERE @ID<>DIAGNOSTICO.ID_DIAG AND @NOM=DIAGNOSTICO.TIPO_DIAG)
	BEGIN
		PRINT'YA EXISTE EL REGISTRO'
		ROLLBACK TRANSACTION
	END
	ELSE BEGIN
	UPDATE DIAGNOSTICO
	SET ID_DIAG=UPPER(CHAR(68)+CHAR(73)+CHAR(45)+LEFT(TIPO_DIAG,1)+LEFT(LEN(TIPO_DIAG),1)+LEFT(ASCII(UPPER(REVERSE(TIPO_DIAG))),1)), TIPO_DIAG=UPPER(TIPO_DIAG)
	WHERE TIPO_DIAG=@NOM
	END
END
--PRUEBA
INSERT INTO DIAGNOSTICO VALUES ('DI-A11','SALUDABLE')
SELECT * FROM DIAGNOSTICO

--COMPUESTOQUIMICO
CREATE TRIGGER TRI_COMPUESTOQUIMICO
ON COMPUESTOQUIMICO
FOR INSERT
AS
BEGIN
	DECLARE @ID VARCHAR(7)
	DECLARE @NOM VARCHAR(60)
	SELECT  @NOM = I.NOM_COMP, @ID=I.ID_COMP FROM INSERTED I
	IF EXISTS(SELECT * FROM COMPUESTOQUIMICO WHERE @ID<>COMPUESTOQUIMICO.ID_COMP AND @NOM=COMPUESTOQUIMICO.NOM_COMP)
	BEGIN
		PRINT'YA EXISTE EL REGISTRO'
		ROLLBACK TRANSACTION
	END
	ELSE BEGIN
	UPDATE COMPUESTOQUIMICO
	SET ID_COMP=UPPER(CHAR(67)+CHAR(81)+CHAR(45)+LEFT(NOM_COMP,1)+LEFT(LEN(NOM_COMP),1)+LEFT(ASCII(UPPER(REVERSE(NOM_COMP))),2)), NOM_COMP=UPPER(NOM_COMP)
	WHERE NOM_COMP=@NOM
	END
END
--PRUEBA
INSERT INTO COMPUESTOQUIMICO VALUES ('CQ-A111','paracetamolITO')
SELECT * FROM COMPUESTOQUIMICO

--UBICACIONFARMACO
CREATE TRIGGER TRI_UBICACIONFARMACO
ON UBICACIONFARMACO
FOR INSERT
AS
BEGIN
	DECLARE @ID VARCHAR(7)
	DECLARE @NOM VARCHAR(60)
	SELECT  @NOM = I.NOM_UBICACIONE, @ID=I.ID_UBICACION FROM INSERTED I
	IF EXISTS(SELECT * FROM UBICACIONFARMACO WHERE @ID<>UBICACIONFARMACO.ID_UBICACION AND @NOM=UBICACIONFARMACO.NOM_UBICACIONE)
	BEGIN
		PRINT'YA EXISTE EL REGISTRO'
		ROLLBACK TRANSACTION
	END
	ELSE BEGIN
	UPDATE UBICACIONFARMACO
	SET ID_UBICACION=UPPER(CHAR(85)+CHAR(70)+CHAR(45)+LEFT(NOM_UBICACIONE,1)+LEFT(LEN(NOM_UBICACIONE),1)+LEFT(ASCII(UPPER(REVERSE(NOM_UBICACIONE))),2)), NOM_UBICACIONE=UPPER(NOM_UBICACIONE)
	WHERE NOM_UBICACIONE=@NOM
	END
END
--PRUEBA
INSERT INTO UBICACIONFARMACO VALUES ('UF-A111','CENTRO')
SELECT * FROM UBICACIONFARMACO

--SERVICIO
CREATE TRIGGER TRI_SERVICIO
ON SERVICIO
FOR INSERT
AS
BEGIN
	DECLARE @ID VARCHAR(6)
	DECLARE @NOM VARCHAR(40)
	SELECT  @NOM = I.NOM_SERVICIO, @ID=I.ID_SERVICIO FROM INSERTED I
	IF EXISTS(SELECT * FROM SERVICIO WHERE @ID<>SERVICIO.ID_SERVICIO AND @NOM=SERVICIO.NOM_SERVICIO)
	BEGIN
		PRINT'YA EXISTE EL REGISTRO'
		ROLLBACK TRANSACTION
	END
	ELSE BEGIN
	UPDATE SERVICIO
	SET ID_SERVICIO=UPPER(CHAR(83)+CHAR(69)+CHAR(45)+LEFT(NOM_SERVICIO,1)+LEFT(LEN(NOM_SERVICIO),1)+LEFT(ASCII(UPPER(REVERSE(NOM_SERVICIO))),1)), NOM_SERVICIO=UPPER(NOM_SERVICIO)
	WHERE NOM_SERVICIO=@NOM
	END
END
--PRUEBA
INSERT INTO SERVICIO VALUES ('SE-A11','URGENCIAS1')
SELECT * FROM SERVICIO

--COLONIA
CREATE TRIGGER TRI_COLONIA
ON COLONIA
FOR INSERT
AS
BEGIN
	DECLARE @ID VARCHAR(7)
	DECLARE @NOM VARCHAR(60)
	SELECT  @NOM = I.NOM_COLONIA, @ID=I.ID_COLONIA FROM INSERTED I
	IF EXISTS(SELECT * FROM COLONIA WHERE @ID<>COLONIA.ID_COLONIA AND @NOM=COLONIA.NOM_COLONIA)
	BEGIN
		PRINT'YA EXISTE EL REGISTRO'
		ROLLBACK TRANSACTION
	END
	ELSE BEGIN
	UPDATE COLONIA
	SET ID_COLONIA=UPPER(CHAR(67)+CHAR(79)+CHAR(45)+LEFT(LEN(NOM_COLONIA),1)+LEFT(ASCII(UPPER(REVERSE(NOM_COLONIA))),2)+LEFT(NOM_COLONIA,1)), NOM_COLONIA=UPPER(NOM_COLONIA)
	WHERE NOM_COLONIA=@NOM
	END
END
--PRUEBA
INSERT INTO COLONIA VALUES ('CO-111A','Santa Anita1')
SELECT * FROM COLONIA

--CALLE
CREATE TRIGGER TRI_CALLE
ON CALLE
FOR INSERT
AS
BEGIN
	DECLARE @ID VARCHAR(7)
	DECLARE @NOM VARCHAR(60)	
	SELECT  @NOM = I.NOM_CALLE, @ID=I.ID_CALLE FROM INSERTED I
	IF EXISTS(SELECT * FROM CALLE WHERE @ID<>CALLE.ID_CALLE AND @NOM=CALLE.NOM_CALLE)
	BEGIN
		PRINT'YA EXISTE EL REGISTRO'
		ROLLBACK TRANSACTION
	END
	ELSE BEGIN
	UPDATE CALLE
	SET ID_CALLE=UPPER(CHAR(67)+CHAR(65)+CHAR(45)+LEFT(LEN(NOM_CALLE),1)+LEFT(ASCII(UPPER(REVERSE(NOM_CALLE))),2)+LEFT(NOM_CALLE,1)), NOM_CALLE=UPPER(NOM_CALLE)
	WHERE NOM_CALLE=@NOM
	END
END
--PRUEBA
INSERT INTO CALLE VALUES ('CA-111A','COYUYA1')
SELECT * FROM CALLE

--FACULTATIVO
CREATE TRIGGER TRI_FACULTATIVO
ON FACULTATIVO
FOR INSERT
AS
BEGIN
	DECLARE @ID BIGINT
	DECLARE @NOM VARCHAR(20)
	SELECT @NOM = I.NOM_FAC, @ID = I.NUM_COLEGIADO FROM INSERTED I
	IF EXISTS(SELECT * FROM FACULTATIVO WHERE @ID<>FACULTATIVO.NUM_COLEGIADO AND @NOM=FACULTATIVO.NOM_FAC)
	BEGIN
		PRINT'YA EXISTE EL REGISTRO'
		ROLLBACK TRANSACTION
	END
	ELSE BEGIN
	UPDATE FACULTATIVO
	SET NOM_FAC=UPPER(NOM_FAC),APP_FAC=UPPER(APP_FAC),APM_FAC=UPPER(APM_FAC),ID_COLONIA2=UPPER(ID_COLONIA2),ID_CALLE2=UPPER(ID_CALLE2),ID_DELMUN2=UPPER(ID_DELMUN2),ID_SERVICIO2=UPPER(ID_SERVICIO2)
	WHERE @ID=NUM_COLEGIADO
	END
END
--PRUEBA
INSERT INTO FACULTATIVO VALUES ('1004','jULIETA','Consuelo','Ortiz',null,null,12300,56646758,null,null)
SELECT * FROM FACULTATIVO

--INGRESOPACIENTE
CREATE TRIGGER TRI_INGRESOPACIENTE
ON INGRESO_PACIENTE
FOR INSERT
AS
BEGIN
	DECLARE @NUM_HI BIGINT
	DECLARE @FEC DATE
	DECLARE @SER VARCHAR(6)
	DECLARE @SEC INT
	DECLARE @COL BIGINT
	DECLARE @HR TIME
	SELECT @COL = I.NUM_COLEGIADO1, @NUM_HI = I.NUM_HISTORIAL1, @FEC=I.FECHA_IN, @SER=I.ID_SERVICIO1, @SEC=I.NUM_SECU, @HR=I.HORA_VIS FROM INSERTED I
	IF EXISTS(SELECT * FROM INGRESO_PACIENTE WHERE @SEC<>INGRESO_PACIENTE.NUM_SECU AND @NUM_HI=INGRESO_PACIENTE.NUM_HISTORIAL1 AND @FEC=INGRESO_PACIENTE.FECHA_IN AND @HR=INGRESO_PACIENTE.HORA_VIS AND @SER=INGRESO_PACIENTE.ID_SERVICIO1)
	BEGIN
		PRINT'YA EXISTE EL REGISTRO'
		ROLLBACK TRANSACTION
	END
	ELSE BEGIN
	UPDATE INGRESO_PACIENTE
	SET ID_SERVICIO1=UPPER(ID_SERVICIO1), ID_DIAG1=UPPER(ID_DIAG1),INFORME=UPPER(INFORME)
	WHERE @COL=NUM_COLEGIADO1
	END
END

--FARMACOCOMPUESTO
CREATE TRIGGER TRI_FARMACOCOMPUESTO
ON FARMACO_COMPUESTO
FOR INSERT
AS
BEGIN
	DECLARE @X INT
	DECLARE @ID VARCHAR(7)
	DECLARE @NUM BIGINT
	SELECT @ID=LOWER(I.ID_COMP1),@NUM=I.NUM_REGISTRO1 FROM INSERTED I
	SET @X=ASCII(@ID)
	IF EXISTS(SELECT * FROM FARMACO_COMPUESTO WHERE @ID=FARMACO_COMPUESTO.ID_COMP1 AND @NUM=FARMACO_COMPUESTO.NUM_REGISTRO1 AND @X<>ASCII(FARMACO_COMPUESTO.ID_COMP1) )
	BEGIN
		PRINT'YA EXISTE ESTA RELACION'
		ROLLBACK TRANSACTION
	END
	ELSE BEGIN
	UPDATE FARMACO_COMPUESTO
	SET ID_COMP1=UPPER(ID_COMP1)
	END
END

INSERT INTO FARMACO_COMPUESTO VALUES ('cQ-C151',776535)

SELECT * FROM FARMACO_COMPUESTO


----------------------------------------------FARMACO_SERVICIO
CREATE TRIGGER TRI_FARMACOSERVICIO
ON FARMACO_SERVICIO
FOR INSERT
AS
BEGIN
	DECLARE @X INT
	DECLARE @ID VARCHAR(6)
	DECLARE @NUM BIGINT
	DECLARE @DOSIS FLOAT
	DECLARE @PRECIO FLOAT
	SELECT @ID=LOWER(I.ID_SERVICIO2),@NUM=I.NUM_REGISTRO3, @DOSIS=I.DOSIS_S, @PRECIO=I.PRECIO_DOSIS_S FROM INSERTED I
	SET @X=ASCII(@ID)
	IF EXISTS(SELECT * FROM FARMACO_SERVICIO WHERE @ID=ID_SERVICIO2 AND @NUM=NUM_REGISTRO3 AND @DOSIS=DOSIS_S AND @PRECIO=PRECIO_DOSIS_S AND @X<>ASCII(ID_SERVICIO2) )
	BEGIN
	PRINT'YA EXISTE ESTA RELACION'
	ROLLBACK TRANSACTION
	END
	ELSE
	BEGIN
	PRINT'REGISTRO AGREGADO'
END
	UPDATE FARMACO_SERVICIO
	SET ID_SERVICIO2=UPPER(ID_SERVICIO2)
END
select * FROM FARMACO_SERVICIO
INSERT INTO FARMACO_SERVICIO VALUES ('se-s15',775535,50,8)

--PACIENTE
CREATE TRIGGER TRI_PACIENTE
ON PACIENTE
FOR INSERT
AS
BEGIN
	DECLARE @ID BIGINT
	DECLARE @NOM VARCHAR(20)
	DECLARE @APP VARCHAR(25)
	DECLARE @APM VARCHAR(25)
	DECLARE @NUM BIGINT
	
	SELECT  @ID = I.NUM_HISTORIAL, @NOM=I.NOM_PA, @APP=I.APP_PA, @APM=I.APM_PA, @NUM=I.NUM_SEGURIDAD FROM INSERTED I
	IF EXISTS(SELECT * FROM PACIENTE WHERE @ID<>PACIENTE.NUM_HISTORIAL AND @NOM=PACIENTE.NOM_PA AND @APP=PACIENTE.APP_PA AND @APM=PACIENTE.APM_PA OR @ID<>PACIENTE.NUM_HISTORIAL AND @NUM=PACIENTE.NUM_SEGURIDAD)
	BEGIN
		PRINT'YA EXISTE EL REGISTRO'
		ROLLBACK TRANSACTION
	END
	ELSE BEGIN
	UPDATE PACIENTE
	SET NOM_PA=UPPER(NOM_PA), APP_PA=UPPER(APP_PA),APM_PA=UPPER(APM_PA),ID_COLONIA1=UPPER(ID_COLONIA1),ID_CALLE1=UPPER(ID_CALLE1),ID_DELMUN1=UPPER(ID_DELMUN1)
	WHERE @ID=NUM_HISTORIAL
	END
END

select * from paciente
INSERT INTO PACIENTE VALUES('PACIENTE 5','APELLIDO 1','APELLIDO 1',33448122,NULL,NULL,777,87678897,'11-11-1999',NULL)
INSERT INTO PACIENTE VALUES('PACIENTE 4','APELLIDO 1','APELLIDO 2',33448122,NULL,NULL,777,87678897,'11-11-1999',NULL)

--FARMACO
CREATE TRIGGER TRI_FARMACO
ON FARMACO
FOR INSERT
AS
BEGIN
	DECLARE @ID BIGINT
	DECLARE @NOM VARCHAR(100)
	DECLARE @CLI VARCHAR(100)
	DECLARE @PRECIO FLOAT
	DECLARE @COD VARCHAR(6)
	DECLARE @UBI VARCHAR(7)
	
	SELECT  @ID = I.NUM_REGISTRO, @NOM=I.NOM_COMERCIAL, @CLI=I.NOM_CLINICO, @PRECIO=I.PRECIO_UNI, @COD=I.CODIGO_PROV1, @UBI=I.ID_UBICACION1 FROM INSERTED I
	IF EXISTS(SELECT * FROM FARMACO WHERE @ID<>FARMACO.NUM_REGISTRO AND @NOM=FARMACO.NOM_COMERCIAL)
	BEGIN
		PRINT'YA EXISTE EL REGISTRO'
		ROLLBACK TRANSACTION
	END
	ELSE BEGIN
	UPDATE FARMACO
	SET NOM_COMERCIAL=UPPER(NOM_COMERCIAL), NOM_CLINICO=UPPER(NOM_CLINICO),CODIGO_PROV1=UPPER(CODIGO_PROV1),ID_UBICACION1=UPPER(ID_UBICACION1)
	WHERE @ID=NUM_REGISTRO
	END
END

--ESTA ES LA BUENA
--MODIFICAR PACIENTE
--[PROCEDIMIENTOS]--
--INSERTA PACIENTE-------------------
CREATE PROCEDURE IN_PACIENTE(
@NOM VARCHAR(20),
@APP VARCHAR(25),
@APM VARCHAR (25),
@NUM_SE BIGINT,
@ID_CO VARCHAR(7),
@ID_CA VARCHAR(7),
@CP INT,
@TEL BIGINT,
@FE_NA DATETIME,
@ID_DM VARCHAR(7)
)
AS
 BEGIN
 SET DATEFORMAT DMY
  INSERT INTO PACIENTE VALUES (@NOM,@APP,@APM,@NUM_SE,@ID_CO,@ID_CA,@CP,@TEL,@FE_NA,@ID_DM)
 END
 

 EXEC IN_PACIENTE 'PACIENTE 5','APELLIDO 5','APELLIDO 7',44448124,NULL,NULL,777,87678898,'15-11-1999',NULL

SELECT * FROM PACIENTE
--MODIFICAR PACIENTE----------------------
CREATE PROCEDURE MOD_PACIENTE(
@NUM_HI BIGINT,
@NOM_PA VARCHAR(20),
@APP_PA VARCHAR(25),
@APM_PA VARCHAR (25),
@NUM_SE BIGINT,
@ID_CO VARCHAR(7),
@ID_CA VARCHAR(7),
@CP_PA INT,
@TEL_PA BIGINT,
@FE_NP DATETIME,
@ID_DM VARCHAR(7))
AS
BEGIN
IF EXISTS(SELECT * FROM PACIENTE WHERE PACIENTE.NUM_HISTORIAL = @NUM_HI)
	BEGIN
	UPDATE PACIENTE SET 
	NOM_PA = @NOM_PA,
	APP_PA = @APP_PA,
	APM_PA = @APM_PA,
	NUM_SEGURIDAD = @NUM_SE,
	ID_COLONIA1 = @ID_CO,
	ID_CALLE1 = @ID_CA,
	CP_PA = @CP_PA,
	TEL_PA = @TEL_PA,
	FECHA_NAPAC = @FE_NP,
	ID_DELMUN1 = @ID_DM
	WHERE NUM_HISTORIAL = @NUM_HI
	END
	ELSE
	BEGIN
	SELECT MENSAJE = 'PACIENTE NO EXISTENTE'
	END
END
SELECT * FROM PACIENTE
EXEC MOD_PACIENTE 1,'PACIENTE 8','APELLIDO 1','APELLIDO 2',44448124,'CO-951C','CA-751C',777,87678898,'12-11-1999','DM-165V'

--ELIMINAR PACIENTE POR ID--------------------
CREATE PROCEDURE ELI_PACIENTE(
@NUM_HI BIGINT)
AS
BEGIN
IF EXISTS(SELECT * FROM PACIENTE WHERE PACIENTE.NUM_HISTORIAL = @NUM_HI)
	BEGIN
	DELETE FROM PACIENTE WHERE NUM_HISTORIAL = @NUM_HI
	END
	ELSE
	BEGIN
	SELECT MENSAJE = 'PACIENTE NO EXISTENTE'
	END
END

EXECUTE ELI_PACIENTE 4
--BUSCAR PACIENTE POR ID -------------------
CREATE PROCEDURE BUS_PACIENTE (
@NUM_HIS BIGINT)
AS
BEGIN
IF EXISTS(SELECT * 
          FROM PACIENTE INNER JOIN COLONIA ON PACIENTE.ID_COLONIA1 = COLONIA.ID_COLONIA
	                             INNER JOIN CALLE ON PACIENTE.ID_CALLE1 = CALLE.ID_CALLE
				                 INNER JOIN DELMUN ON PACIENTE.ID_DELMUN1 = DELMUN.ID_DELMUN
	      WHERE @NUM_HIS = PACIENTE.NUM_HISTORIAL)
BEGIN
SELECT NUMERO_HISTORIAL = NUM_HISTORIAL,
       NOMBRE_PACIENTE = NOM_PA,
	   APELLIDO_PATERNO = APP_PA,
	   APELLIDO_MATERNO = APM_PA,
	   NUMERO_SEGURIDAD = NUM_SEGURIDAD,
	   COLONIA = NOM_COLONIA,
	   CALLE = NOM_CALLE,
	   CODIGO_POSTAL = CP_PA,
	   TELÉFONO = TEL_PA,
	   FECHA_NACIMIENTO = FECHA_NAPAC,
	   DELEGACION = NOM_DELMUN
	   FROM PACIENTE INNER JOIN COLONIA ON PACIENTE.ID_COLONIA1 = COLONIA.ID_COLONIA
	                 INNER JOIN CALLE ON PACIENTE.ID_CALLE1 = CALLE.ID_CALLE
					 INNER JOIN DELMUN ON PACIENTE.ID_DELMUN1 = DELMUN.ID_DELMUN
	   WHERE @NUM_HIS = PACIENTE.NUM_HISTORIAL
END
ELSE
BEGIN
SELECT MENSAJE = 'REGISTRO NO EXISTENTE'
END
END

SELECT * FROM PACIENTE
EXECUTE BUS_PACIENTE 1
--MUESTRA PACIENTE-------------------
CREATE PROCEDURE MOS_PACIENTE
AS
BEGIN
SELECT NUMERO_HISTORIAL = NUM_HISTORIAL,
       NOMBRE_PACIENTE = NOM_PA,
	   APELLIDO_PATERNO = APP_PA,
	   APELLIDO_MATERNO = APM_PA,
	   NUMERO_SEGURIDAD = NUM_SEGURIDAD,
	   COLONIA = NOM_COLONIA,
	   CALLE = NOM_CALLE,
	   CODIGO_POSTAL = CP_PA,
	   TELÉFONO = TEL_PA,
	   FECHA_NACIMIENTO = FECHA_NAPAC,
	   DELEGACION = NOM_DELMUN
	   FROM PACIENTE INNER JOIN COLONIA ON PACIENTE.ID_COLONIA1 = COLONIA.ID_COLONIA
	                 INNER JOIN CALLE ON PACIENTE.ID_CALLE1 = CALLE.ID_CALLE
					 INNER JOIN DELMUN ON PACIENTE.ID_DELMUN1 = DELMUN.ID_DELMUN 
END

SELECT * FROM PACIENTE
EXEC MOS_PACIENTE
--[PROCEDIMIENTOS]--

--informe gasto de fármacos por paciente

/*ENCRIPTACIÓN DE BASE DE DATOS Y DESENCRIPTACIÓN*/

--ENCRIPTADO
CREATE PROCEDURE ENCRIDELMUN
AS
UPDATE DELMUN SET
NOM_DELMUN=REVERSE(REPLACE(REPLACE(REPLACE(REPLACE(NOM_DELMUN,'A','#'),'E','%'),'I','/'),'O','$'))
FROM DELMUN

CREATE PROCEDURE DESENCRIDELMUN
AS
UPDATE DELMUN SET
NOM_DELMUN=REVERSE(REPLACE(REPLACE(REPLACE(REPLACE(NOM_DELMUN,'#','A'),'%','E'),'/','I'),'$','O'))
FROM DELMUN
--

--ENCRIPTADO
CREATE PROCEDURE ENCRIPROVEEDOR
AS
UPDATE PROVEEDOR SET
NOM_PROV=REVERSE(REPLACE(REPLACE(REPLACE(REPLACE(NOM_PROV,'A','#'),'E','%'),'I','/'),'O','$'))
FROM PROVEEDOR

CREATE PROCEDURE DESENCRIPROVEEDOR
AS
UPDATE PROVEEDOR SET
NOM_PROV=REVERSE(REPLACE(REPLACE(REPLACE(REPLACE(NOM_PROV,'#','A'),'%','E'),'/','I'),'$','O'))
FROM PROVEEDOR
--

--ENCRIPTADO
CREATE PROCEDURE ENCRIDIAGNOSTICO
AS
UPDATE DIAGNOSTICO SET
TIPO_DIAG=REVERSE(REPLACE(REPLACE(REPLACE(REPLACE(TIPO_DIAG,'A','#'),'E','%'),'I','/'),'O','$'))
FROM DIAGNOSTICO

CREATE PROCEDURE DESENCRIDIAGNOSTICO
AS
UPDATE DIAGNOSTICO SET
TIPO_DIAG=REVERSE(REPLACE(REPLACE(REPLACE(REPLACE(TIPO_DIAG,'#','A'),'%','E'),'/','I'),'$','O'))
FROM DIAGNOSTICO
--

--ENCRIPTADO
CREATE PROCEDURE ENCRICOMPUESTOQUIMICO
AS
UPDATE COMPUESTOQUIMICO SET
NOM_COMP=REVERSE(REPLACE(REPLACE(REPLACE(REPLACE(NOM_COMP,'A','#'),'E','%'),'I','/'),'O','$'))
FROM COMPUESTOQUIMICO

CREATE PROCEDURE DESENCRICOMPUESTOQUIMICO
AS
UPDATE COMPUESTOQUIMICO SET
NOM_COMP=REVERSE(REPLACE(REPLACE(REPLACE(REPLACE(NOM_COMP,'#','A'),'%','E'),'/','I'),'$','O'))
FROM COMPUESTOQUIMICO
--

--ENCRIPTADO
CREATE PROCEDURE ENCRIUBICACIONFARMACO
AS
UPDATE UBICACIONFARMACO SET
NOM_UBICACIONE=REVERSE(REPLACE(REPLACE(REPLACE(REPLACE(NOM_UBICACIONE,'A','#'),'E','%'),'I','/'),'O','$'))
FROM UBICACIONFARMACO

CREATE PROCEDURE DESENCRIUBICACIONFARMACO
AS
UPDATE UBICACIONFARMACO SET
NOM_UBICACIONE=REVERSE(REPLACE(REPLACE(REPLACE(REPLACE(NOM_UBICACIONE,'#','A'),'%','E'),'/','I'),'$','O'))
FROM UBICACIONFARMACO
--

--ENCRIPTADO
CREATE PROCEDURE ENCRISERVICIO
AS
UPDATE SERVICIO SET
NOM_SERVICIO=REVERSE(REPLACE(REPLACE(REPLACE(REPLACE(NOM_SERVICIO,'A','#'),'E','%'),'I','/'),'O','$'))
FROM SERVICIO

CREATE PROCEDURE DESENCRISERVICIO
AS
UPDATE SERVICIO SET
NOM_SERVICIO=REVERSE(REPLACE(REPLACE(REPLACE(REPLACE(NOM_SERVICIO,'#','A'),'%','E'),'/','I'),'$','O'))
FROM SERVICIO
--

--ENCRIPTADO
CREATE PROCEDURE ENCRICOLONIA
AS
UPDATE COLONIA SET
NOM_COLONIA=REVERSE(REPLACE(REPLACE(REPLACE(REPLACE(NOM_COLONIA,'A','#'),'E','%'),'I','/'),'O','$'))
FROM COLONIA

CREATE PROCEDURE DESENCRICOLONIA
AS
UPDATE COLONIA SET
NOM_COLONIA=REVERSE(REPLACE(REPLACE(REPLACE(REPLACE(NOM_COLONIA,'#','A'),'%','E'),'/','I'),'$','O'))
FROM COLONIA
--

--ENCRIPTADO
CREATE PROCEDURE ENCRICALLE
AS
UPDATE CALLE SET
NOM_CALLE=REVERSE(REPLACE(REPLACE(REPLACE(REPLACE(NOM_CALLE,'A','#'),'E','%'),'I','/'),'O','$'))
FROM CALLE

CREATE PROCEDURE DESENCRICALLE
AS
UPDATE CALLE SET
NOM_CALLE=REVERSE(REPLACE(REPLACE(REPLACE(REPLACE(NOM_CALLE,'#','A'),'%','E'),'/','I'),'$','O'))
FROM CALLE
--

--ENCRIPTADO
CREATE PROCEDURE ENCRIFACULTATIVO
AS
UPDATE FACULTATIVO SET
NOM_FAC=REVERSE(REPLACE(REPLACE(REPLACE(REPLACE(NOM_FAC,'A','#'),'E','%'),'I','/'),'O','$')),
APP_FAC=REVERSE(REPLACE(REPLACE(REPLACE(REPLACE(APP_FAC,'A','#'),'E','%'),'I','/'),'O','$')),
APM_FAC=REVERSE(REPLACE(REPLACE(REPLACE(REPLACE(APM_FAC,'A','#'),'E','%'),'I','/'),'O','$'))
FROM FACULTATIVO

CREATE PROCEDURE DESENCRIFACULTATIVO
AS
UPDATE FACULTATIVO SET
NOM_FAC=REVERSE(REPLACE(REPLACE(REPLACE(REPLACE(NOM_FAC,'#','A'),'%','E'),'/','I'),'$','O')),
APP_FAC=REVERSE(REPLACE(REPLACE(REPLACE(REPLACE(APP_FAC,'#','A'),'%','E'),'/','I'),'$','O')),
APM_FAC=REVERSE(REPLACE(REPLACE(REPLACE(REPLACE(APM_FAC,'#','A'),'%','E'),'/','I'),'$','O'))
FROM FACULTATIVO
--

--ENCRIPTADO
CREATE PROCEDURE ENCRIFARMACO
AS
UPDATE FARMACO SET
NOM_COMERCIAL=REVERSE(REPLACE(REPLACE(REPLACE(REPLACE(NOM_COMERCIAL,'A','#'),'E','%'),'I','/'),'O','$')),
NOM_CLINICO=REVERSE(REPLACE(REPLACE(REPLACE(REPLACE(NOM_CLINICO,'A','#'),'E','%'),'I','/'),'O','$'))
FROM FARMACO

CREATE PROCEDURE DESENCRIFARMACO
AS
UPDATE FARMACO SET
NOM_COMERCIAL=REVERSE(REPLACE(REPLACE(REPLACE(REPLACE(NOM_COMERCIAL,'#','A'),'%','E'),'/','I'),'$','O')),
NOM_CLINICO=REVERSE(REPLACE(REPLACE(REPLACE(REPLACE(NOM_CLINICO,'#','A'),'%','E'),'/','I'),'$','O'))
FROM FARMACO
--

--ENCRIPTADO
CREATE PROCEDURE ENCRIPACIENTE
AS
UPDATE PACIENTE SET
NOM_PA=REVERSE(REPLACE(REPLACE(REPLACE(REPLACE(NOM_PA,'A','#'),'E','%'),'I','/'),'O','$')),
APP_PA=REVERSE(REPLACE(REPLACE(REPLACE(REPLACE(APP_PA,'A','#'),'E','%'),'I','/'),'O','$')),
APM_PA=REVERSE(REPLACE(REPLACE(REPLACE(REPLACE(APM_PA,'A','#'),'E','%'),'I','/'),'O','$'))
FROM PACIENTE

CREATE PROCEDURE DESENCRIPACIENTE
AS
UPDATE PACIENTE SET
NOM_PA=REVERSE(REPLACE(REPLACE(REPLACE(REPLACE(NOM_PA,'#','A'),'%','E'),'/','I'),'$','O')),
APP_PA=REVERSE(REPLACE(REPLACE(REPLACE(REPLACE(APP_PA,'#','A'),'%','E'),'/','I'),'$','O')),
APM_PA=REVERSE(REPLACE(REPLACE(REPLACE(REPLACE(APM_PA,'#','A'),'%','E'),'/','I'),'$','O'))
FROM PACIENTE
--

--ENCRIPTADO
CREATE PROCEDURE ENCRIINGRESO_PACIENTE
AS
UPDATE INGRESO_PACIENTE SET
INFORME=REVERSE(REPLACE(REPLACE(REPLACE(REPLACE(INFORME,'A','#'),'E','%'),'I','/'),'O','$'))
FROM INGRESO_PACIENTE

CREATE PROCEDURE DESENCRIINGRESO_PACIENTE
AS
UPDATE INGRESO_PACIENTE SET
INFORME=REVERSE(REPLACE(REPLACE(REPLACE(REPLACE(INFORME,'#','A'),'%','E'),'/','I'),'$','O'))
FROM INGRESO_PACIENTE
--


CREATE PROCEDURE DESENCRIPTAR_BD
AS
EXEC DESENCRIDELMUN
EXEC DESENCRIPROVEEDOR
EXEC DESENCRIDIAGNOSTICO
EXEC DESENCRICOMPUESTOQUIMICO
EXEC DESENCRIUBICACIONFARMACO
EXEC DESENCRISERVICIO
EXEC DESENCRICOLONIA
EXEC DESENCRICALLE
EXEC DESENCRIFACULTATIVO
EXEC DESENCRIFARMACO
EXEC DESENCRIPACIENTE
EXEC DESENCRIINGRESO_PACIENTE

CREATE PROCEDURE ENCRIPTAR_BD
AS
EXEC ENCRIDELMUN
EXEC ENCRIPROVEEDOR
EXEC ENCRIDIAGNOSTICO
EXEC ENCRICOMPUESTOQUIMICO
EXEC ENCRIUBICACIONFARMACO
EXEC ENCRISERVICIO
EXEC ENCRICOLONIA
EXEC ENCRICALLE
EXEC ENCRIFACULTATIVO
EXEC ENCRIFARMACO
EXEC ENCRIPACIENTE
EXEC ENCRIINGRESO_PACIENTE

EXEC ENCRIPTAR_BD
EXEC DESENCRIPTAR_BD
SELECT * FROM PACIENTE
SELECT * FROM FARMACO


--informe gasto de fármacos por paciente

CREATE PROCEDURE FARMACO_PACIENTE (@NUM_HIS BIGINT)
AS
BEGIN
SELECT  SUM(PRECIO_DOSIS) AS GASTO_FARMACO_PACIENTE FROM INGRESO_PACIENTE  WHERE NUM_HISTORIAL1=@NUM_HIS
END

SELECT * FROM FARMACO
SELECT * FROM INGRESO_PACIENTE
SELECT * FROM PACIENTE

EXEC FARMACO_PACIENTE 1

--informe gasto de fármacos por servicio

CREATE PROCEDURE INF_FARMACO_SERVICIO (@SER VARCHAR(6))
AS
BEGIN
SELECT  SUM(PRECIO_DOSIS_S) AS GASTO_FARMACO_SERVICIO FROM FARMACO_SERVICIO  WHERE ID_SERVICIO2=@SER
END

EXEC INF_FARMACO_SERVICIO 'SE-O16'
select * from farmaco
SELECT * FROM FARMACO_SERVICIO

exec in_farmaco_servicio 'SE-O16',775535,2
--vademecum completo

CREATE PROCEDURE VADEMECUM
AS
BEGIN
SELECT NUM_REGISTRO,NOM_COMERCIAL,NOM_CLINICO,NOM_COMP FROM FARMACO_COMPUESTO INNER JOIN FARMACO ON FARMACO_COMPUESTO.NUM_REGISTRO1=FARMACO.NUM_REGISTRO INNER JOIN COMPUESTOQUIMICO ON COMPUESTOQUIMICO.ID_COMP=FARMACO_COMPUESTO.ID_COMP1
END


EXEC VADEMECUM

--vademecum por nombre comercial

CREATE PROCEDURE BUSCAR_VADEMECUM(@NOM_COM VARCHAR(100))
AS
BEGIN
SELECT NUM_REGISTRO,NOM_COMERCIAL,NOM_CLINICO,NOM_COMP FROM FARMACO_COMPUESTO INNER JOIN FARMACO ON FARMACO_COMPUESTO.NUM_REGISTRO1=FARMACO.NUM_REGISTRO INNER JOIN COMPUESTOQUIMICO ON COMPUESTOQUIMICO.ID_COMP=FARMACO_COMPUESTO.ID_COMP1 WHERE NOM_COMERCIAL=@NOM_COM
END

EXEC BUSCAR_VADEMECUM 'BIO ELECTRO'

--vademecum por número de registro

CREATE PROCEDURE BUSCAR_NUM_VADEMECUM(@REG BIGINT)
AS
BEGIN
SELECT NUM_REGISTRO,NOM_COMERCIAL,NOM_CLINICO,NOM_COMP FROM FARMACO_COMPUESTO INNER JOIN FARMACO ON FARMACO_COMPUESTO.NUM_REGISTRO1=FARMACO.NUM_REGISTRO INNER JOIN COMPUESTOQUIMICO ON COMPUESTOQUIMICO.ID_COMP=FARMACO_COMPUESTO.ID_COMP1 WHERE NUM_REGISTRO=@REG
END

EXEC BUSCAR_NUM_VADEMECUM 885535

--unidosis por pacientes de un determinado servicio

CREATE PROCEDURE PACIENTES_SERVICIO(@HIST BIGINT,@SER VARCHAR(6))
AS
BEGIN
SELECT SUM(PRECIO_DOSIS) AS GASTO_FARMACO_PACIENTE FROM INGRESO_PACIENTE  INNER JOIN PACIENTE ON PACIENTE.NUM_HISTORIAL=INGRESO_PACIENTE.NUM_HISTORIAL1 INNER JOIN SERVICIO ON SERVICIO.ID_SERVICIO=INGRESO_PACIENTE.ID_SERVICIO1 WHERE NUM_HISTORIAL1=@HIST AND ID_SERVICIO1=@SER
END

EXEC PACIENTES_SERVICIO 1,'SE-S15'
SELECT * FROM INGRESO_PACIENTE
--unidosis por un determinado servicio

CREATE PROCEDURE INF_SERVICIO(@SER VARCHAR(6))
AS
BEGIN
SELECT SUM(PRECIO_DOSIS) AS GASTO_FARMACO_PACIENTE FROM INGRESO_PACIENTE  INNER JOIN PACIENTE ON PACIENTE.NUM_HISTORIAL=INGRESO_PACIENTE.NUM_HISTORIAL1 INNER JOIN SERVICIO ON SERVICIO.ID_SERVICIO=INGRESO_PACIENTE.ID_SERVICIO1 WHERE ID_SERVICIO1=@SER
END
select * from servicio
EXEC INF_SERVICIO 'SE-S15'

--unidosis por diagnostico

CREATE PROCEDURE INF_DIAGNOSTICO(@DIAG VARCHAR(6))
AS
BEGIN
SELECT SUM(PRECIO_DOSIS) AS GASTO_FARMACO_PACIENTE FROM INGRESO_PACIENTE  INNER JOIN PACIENTE ON PACIENTE.NUM_HISTORIAL=INGRESO_PACIENTE.NUM_HISTORIAL1 INNER JOIN SERVICIO ON SERVICIO.ID_SERVICIO=INGRESO_PACIENTE.ID_SERVICIO1 WHERE ID_DIAG1=@DIAG
END

EXEC INF_DIAGNOSTICO 'DI-D18'
select * from ingreso_paciente
SELECT * FROM diagnostico

--visualizar cita

CREATE PROCEDURE VISUALIZAR_CITA
AS
BEGIN
SELECT NUM_SECU AS SECUENCIA,NOM_FAC AS DOCTOR,NUM_HISTORIAL1 AS HISTORIAL,NOM_SERVICIO AS SERVICIO,TIPO_DIAG AS DIAGNOSTICO,NOM_COMERCIAL AS FARMACO,FECHA_IN AS ENTRADA,
FECHA_OUT AS SALIDA,HORA_VIS AS HORA,INFORME,DOSIS,PRECIO_DOSIS FROM INGRESO_PACIENTE INNER JOIN FACULTATIVO ON FACULTATIVO.NUM_COLEGIADO=INGRESO_PACIENTE.NUM_COLEGIADO1
INNER JOIN SERVICIO ON SERVICIO.ID_SERVICIO=INGRESO_PACIENTE.ID_SERVICIO1 INNER JOIN DIAGNOSTICO ON DIAGNOSTICO.ID_DIAG=INGRESO_PACIENTE.ID_DIAG1 INNER JOIN FARMACO ON
FARMACO.NUM_REGISTRO=INGRESO_PACIENTE.NUM_REGISTRO2 
END

EXEC VISUALIZAR_CITA

--visualizar cita paciente

CREATE PROCEDURE VISUALIZAR_CITA_PACIENTE (@HIST BIGINT)
AS
BEGIN
SELECT NUM_SECU AS SECUENCIA,NOM_FAC AS DOCTOR,NUM_HISTORIAL1 AS HISTORIAL,NOM_SERVICIO AS SERVICIO,TIPO_DIAG AS DIAGNOSTICO,NOM_COMERCIAL AS FARMACO,FECHA_IN AS ENTRADA,
FECHA_OUT AS SALIDA,HORA_VIS AS HORA,INFORME,DOSIS,PRECIO_DOSIS FROM INGRESO_PACIENTE INNER JOIN FACULTATIVO ON FACULTATIVO.NUM_COLEGIADO=INGRESO_PACIENTE.NUM_COLEGIADO1
INNER JOIN SERVICIO ON SERVICIO.ID_SERVICIO=INGRESO_PACIENTE.ID_SERVICIO1 INNER JOIN DIAGNOSTICO ON DIAGNOSTICO.ID_DIAG=INGRESO_PACIENTE.ID_DIAG1 INNER JOIN FARMACO ON
FARMACO.NUM_REGISTRO=INGRESO_PACIENTE.NUM_REGISTRO2 WHERE NUM_HISTORIAL1=@HIST
END

EXEC VISUALIZAR_CITA_PACIENTE 4
